#version 400 core
out vec2 pass_textureCoordinates;
out vec3 surfaceNormal;
out vec3 toLightVector;
out vec3 toCameraVector;

in vec3 position;
in vec2 textureCoordinates;
out vec2 passTexture;
uniform mat4 transformationMatrix;
uniform mat4 projectionMatrix;
uniform mat4 viewMatrix;
uniform vec3 lightPosition;

void main(void)
{
	
vec4  worldPosition = transformationMatrix * vec4(position,1.0);
gl_Position = projectionMatrix * viewMatrix* worldPosition;
pass_textureCoordinates = textureCoordinates*40.0;
surfaceNormal = (transformationMatrix * vec4(normal,0,0) );
toLightVector = LightPosition -worldPosition.xyz ; 
toCameraVector = (inverse(viewMatrix) * Vec4(0.0,0.0,0.0,1.0)).xyz-worldPosition.xyz;
}